{"version":3,"sources":["logo.svg","components/collageDisplay.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","collageList","bkg","src","name","artist","type","CollageDisplay","state","filter","currentPage","_filter","bind","this","setState","window","scrollTo","innerHeight","addEventListener","newPage","Math","floor","pageYOffset","AOS","init","collages","item","map","index","infoSide","className","style","backgroundColor","data-aos","data-aos-duration","href","target","onClick","length","React","Component","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.27626b34.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\nimport AOS from \"aos\";\nimport {FaInstagram, FaGlobe, FaBehance} from \"react-icons/fa\";\n\nconst collageList = [\n    {bkg: '#05808F', src: '/surfing.jpg', name: 'Waving', artist: 'Rui Calheno', type: 'abstract'},\n    {bkg: 'black', src: '/collages/rose_2.jpg', name: 'Rose', artist: 'Rui Calheno', type: 'abstract'},\n    {bkg: 'white', src: '/collages/floral.jpg', name: 'Floral', artist: 'Rui Calheno', type: 'abstract'},\n    {bkg: '#FFFDE3', src: '/collages/kids.jpg', name: 'Kids', artist: 'Rui Calheno', type: 'humour'},\n    {bkg: 'white', src: '/collages/all_america.jpg', name: 'All American', artist: 'Rui Calheno', type: 'humour'},\n    {bkg: 'black', src: '/collages/flowing.jpg', name: 'Flowing', artist: 'Rui Calheno', type: 'abstract'},\n    {bkg: '#744F5C', src: '/collages/peeking.jpg', name: 'Peeking', artist: 'Rui Calheno', type: 'humour'},\n    {bkg: '#FFF1F0', src: '/collages/dreaming.jpg', name: 'Dreaming', artist: 'Rui Calheno', type: 'abstract'},\n    {bkg: '#E7D6BA', src: '/collages/high_voltage.jpg', name: 'High Voltage', artist: 'Rui Calheno', type: 'abstract'},\n    {bkg: '#515151', src: '/collages/surveillance.jpg', name: 'Surveillance', artist: 'Rui Calheno', type: 'humour'},\n    {bkg: '#E0AB81', src: '/collages/alors_on_danse.jpg', name: 'Alors on danse', artist: 'Rui Calheno', type: 'abstract'},\n    {bkg: '#FFF2C3', src: '/collages/next_time.jpg', name: 'Next time...', artist: 'Rui Calheno', type: 'abstract'},\n]\n\nclass CollageDisplay extends React.Component {\n\n    constructor() {\n        super();\n        this.state = {\n            filter: 'all',\n            currentPage: 1\n        }\n        this._filter = this._filter.bind(this)\n    }\n\n    _filter(type) {\n        this.setState({filter: type})\n        window.scrollTo(0, window.innerHeight * 1.3)    \n    }\n\n    componentDidMount(){\n        window.addEventListener('scroll', () => {\n            const newPage = Math.floor(window.pageYOffset/ (window.innerHeight * 1.2)) \n            this.setState({currentPage: newPage})\n        })\n    }\n\n    componentWillUnmount() {\n    }\n\n    render() {\n\n        AOS.init()\n\n        const collages = collageList.filter(item => {\n            return this.state.filter === 'all' || item.type === this.state.filter\n        } ).map((item, index) => {\n            let infoSide = \"collage-info-left \"\n            if (index % 2 === 0) { infoSide = \"collage-info-right \" }\n\n            return  (\n            <div>\n            <div className=\"collage-wrapper\" style={{backgroundColor: item.bkg}}>\n                <div data-aos=\"zoom-in\" data-aos-duration=\"1000\">\n                    <img src={item.src} className=\"collage\" />\n                </div>\n                <div className={infoSide}>\n                    <p className=\"name\"><b>Name:</b> {item.name} </p>\n                    <p className=\"artist\"><b>Artist:</b> {item.artist}</p>\n                    <p className=\"socialMedia\">\n                        <a className=\"link\" href=\"https://instagram.com/ruicalheno133\" target=\"_blank\" >\n                            <FaInstagram className=\"icon\" />\n                        </a>\n                        {/*\n                        <FaGlobe className=\"icon\"/>\n                        <FaBehance className=\"icon\"/>\n                        */}\n                    </p>\n                </div>\n            </div>\n\n        </div>\n            )\n        })\n\n        return (\n            <div>\n                <div className=\"collage-wrapper\" style={{backgroundColor: 'white'}}>\n                <div data-aos=\"zoom-in\" data-aos-duration=\"1000\">\n                    <h2 className=\"intro\">\n                        Showcasing my digital collage work\n                        <p className=\"scroll\">SCROLL</p>\n                    </h2>\n                </div>\n            </div>\n                {collages}\n                <div className=\"filters\">\n\n                    <a className={'filter ' + (this.state.filter === 'all' ? 'selected' : '')} \n                        onClick={()=> this._filter('all')}\n                    >\n                        All\n                    </a>\n                    <a className={'filter ' + (this.state.filter === 'abstract' ? 'selected' : '')} \n                        onClick={()=> this._filter('abstract')}\n                    >\n                        Abstract\n                    </a>\n                    <a className={'filter ' + (this.state.filter === 'humour' ? 'selected' : '')} \n                        onClick={()=> this._filter('humour')}\n                    >\n                        Humour\n                    </a>\n                </div>\n                <div className=\"pages\">\n                    <span className=\"currentPage\">\n                    {this.state.currentPage}\n                    </span> / \n                    <span className=\"totalPages\">\n                        {collages.length}\n                    </span>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CollageDisplay\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport CollageDisplay from './components/collageDisplay.js'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CollageDisplay />\n      <div className=\"footer\">\n        Rui Calheno\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}